Lecture 05　資料取得:elasticsearch(1)
--------------------------------------------------------------------------------
5.1　搜尋引擎概論

1.蒐集來的資訊未必有固定結構，經常為半結構或非結構化，不利搜尋查取之速度需求

2.詞條化(tokenization)
  (1)將文本中之字符轉化為詞項(term)，涉及中文斷詞、英文還原(大小寫、單複數)處理

  (2)詞項-文章協同矩陣
　　 出現詞項X之文章有哪些？

  (3)詞袋模型
     詞項X在每篇文章的出現次數為何？
　　 文章Y出現每一詞項的次數為何？

3.TF-IDF
  TF :詞項X於單篇文章的出現頻率。如文章1共有10個單詞、出現2次詞項X，TF=0.2
  IDF:詞項X於所有文章的出現機率。如共有10篇文章、3篇出現詞項X，IDF=10/3+1=2.5

  (1)TF-IDF值高，代表詞項X於某篇文章常出現，卻不常出現於其他文章
  (2)透過關鍵字搜尋，詞項X能找到關聯性強的文章，依此衡量搜尋排序結果

--------------------------------------------------------------------------------
5.2　elasticsearch概論

1.以apache lucene(全文檢索器)為核心，採其儲存結構
  (1)index:形同database，elasticsearch可能由一至多個index構成
  #elasticsearch為非關聯式資料庫，無正規化概念
  (2)document:為JSON物件，每筆資料即為一份文檔
  (3)type:可用來區分不同文檔(資料)，並定義各自mapping(table schema，變數型態)

2.以節點為服務單位
  當資料量龐大時可藉由分片(shard)、副本(replica)建立叢集，提供穩定的存放環境
   
